// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kvrpc.proto

package kvrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KVRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVRequest) Reset()         { *m = KVRequest{} }
func (m *KVRequest) String() string { return proto.CompactTextString(m) }
func (*KVRequest) ProtoMessage()    {}
func (*KVRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a442c05f56e383, []int{0}
}

func (m *KVRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVRequest.Unmarshal(m, b)
}
func (m *KVRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVRequest.Marshal(b, m, deterministic)
}
func (m *KVRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVRequest.Merge(m, src)
}
func (m *KVRequest) XXX_Size() int {
	return xxx_messageInfo_KVRequest.Size(m)
}
func (m *KVRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KVRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KVRequest proto.InternalMessageInfo

func (m *KVRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KVRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type VRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VRequest) Reset()         { *m = VRequest{} }
func (m *VRequest) String() string { return proto.CompactTextString(m) }
func (*VRequest) ProtoMessage()    {}
func (*VRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a442c05f56e383, []int{1}
}

func (m *VRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VRequest.Unmarshal(m, b)
}
func (m *VRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VRequest.Marshal(b, m, deterministic)
}
func (m *VRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VRequest.Merge(m, src)
}
func (m *VRequest) XXX_Size() int {
	return xxx_messageInfo_VRequest.Size(m)
}
func (m *VRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VRequest proto.InternalMessageInfo

func (m *VRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type Status struct {
	Isok                 string   `protobuf:"bytes,1,opt,name=isok,proto3" json:"isok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a442c05f56e383, []int{2}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetIsok() string {
	if m != nil {
		return m.Isok
	}
	return ""
}

type ValueReply struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValueReply) Reset()         { *m = ValueReply{} }
func (m *ValueReply) String() string { return proto.CompactTextString(m) }
func (*ValueReply) ProtoMessage()    {}
func (*ValueReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_55a442c05f56e383, []int{3}
}

func (m *ValueReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueReply.Unmarshal(m, b)
}
func (m *ValueReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueReply.Marshal(b, m, deterministic)
}
func (m *ValueReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueReply.Merge(m, src)
}
func (m *ValueReply) XXX_Size() int {
	return xxx_messageInfo_ValueReply.Size(m)
}
func (m *ValueReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueReply.DiscardUnknown(m)
}

var xxx_messageInfo_ValueReply proto.InternalMessageInfo

func (m *ValueReply) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*KVRequest)(nil), "kvrpc.KVRequest")
	proto.RegisterType((*VRequest)(nil), "kvrpc.VRequest")
	proto.RegisterType((*Status)(nil), "kvrpc.Status")
	proto.RegisterType((*ValueReply)(nil), "kvrpc.ValueReply")
}

func init() { proto.RegisterFile("kvrpc.proto", fileDescriptor_55a442c05f56e383) }

var fileDescriptor_55a442c05f56e383 = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x2e, 0x2b, 0x2a,
	0x48, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x8c, 0xb9, 0x38, 0xbd,
	0xc3, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x04, 0xb8, 0x98, 0xb3, 0x53, 0x2b, 0x25,
	0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x40, 0x4c, 0x21, 0x11, 0x2e, 0xd6, 0xb2, 0xc4, 0x9c, 0xd2,
	0x54, 0x09, 0x26, 0xb0, 0x18, 0x84, 0xa3, 0x24, 0xc3, 0xc5, 0x81, 0x5b, 0x8f, 0x92, 0x0c, 0x17,
	0x5b, 0x70, 0x49, 0x62, 0x49, 0x69, 0xb1, 0x90, 0x10, 0x17, 0x4b, 0x66, 0x71, 0x7e, 0x36, 0x54,
	0x12, 0xcc, 0x56, 0x52, 0xe2, 0xe2, 0x0a, 0x03, 0x19, 0x12, 0x94, 0x5a, 0x90, 0x83, 0x64, 0x3e,
	0x23, 0x92, 0xf9, 0x46, 0x09, 0x5c, 0xcc, 0x8e, 0x05, 0x99, 0x42, 0xda, 0x5c, 0x6c, 0x01, 0xf9,
	0xc5, 0x25, 0xde, 0x61, 0x42, 0x02, 0x7a, 0x10, 0xa7, 0xc3, 0x9d, 0x2a, 0xc5, 0x0b, 0x15, 0x81,
	0xd8, 0xa4, 0xc4, 0x20, 0xa4, 0xc3, 0xc5, 0xe2, 0x9e, 0x5a, 0x12, 0x26, 0xc4, 0x0f, 0x95, 0x80,
	0xab, 0x14, 0x84, 0x09, 0xc0, 0x6d, 0x55, 0x62, 0x48, 0x62, 0x03, 0x07, 0x82, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0xb0, 0xcb, 0xb2, 0xb4, 0x13, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApiClient is the client API for Api service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiClient interface {
	PostKV(ctx context.Context, in *KVRequest, opts ...grpc.CallOption) (*Status, error)
	GetV(ctx context.Context, in *VRequest, opts ...grpc.CallOption) (*ValueReply, error)
}

type apiClient struct {
	cc *grpc.ClientConn
}

func NewApiClient(cc *grpc.ClientConn) ApiClient {
	return &apiClient{cc}
}

func (c *apiClient) PostKV(ctx context.Context, in *KVRequest, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/kvrpc.Api/PostKV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetV(ctx context.Context, in *VRequest, opts ...grpc.CallOption) (*ValueReply, error) {
	out := new(ValueReply)
	err := c.cc.Invoke(ctx, "/kvrpc.Api/GetV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServer is the server API for Api service.
type ApiServer interface {
	PostKV(context.Context, *KVRequest) (*Status, error)
	GetV(context.Context, *VRequest) (*ValueReply, error)
}

// UnimplementedApiServer can be embedded to have forward compatible implementations.
type UnimplementedApiServer struct {
}

func (*UnimplementedApiServer) PostKV(ctx context.Context, req *KVRequest) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostKV not implemented")
}
func (*UnimplementedApiServer) GetV(ctx context.Context, req *VRequest) (*ValueReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetV not implemented")
}

func RegisterApiServer(s *grpc.Server, srv ApiServer) {
	s.RegisterService(&_Api_serviceDesc, srv)
}

func _Api_PostKV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).PostKV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvrpc.Api/PostKV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).PostKV(ctx, req.(*KVRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_GetV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvrpc.Api/GetV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetV(ctx, req.(*VRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Api_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kvrpc.Api",
	HandlerType: (*ApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostKV",
			Handler:    _Api_PostKV_Handler,
		},
		{
			MethodName: "GetV",
			Handler:    _Api_GetV_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kvrpc.proto",
}
